type Mutation {
  greet(name: String): String!
}

type Subscription {
  time: Time!
  cpuSpeed: CpuCurrentSpeed!
  cpuTemperature: CpuTemperature!
  memory: Memory!
  battery: Battery!
}

type Query {
  time: Time!
  system: System!
  bios: Bios!
  baseboard: Baseboard!
  cpu: Cpu!
  cpuCache: CpuCache!
  cpuSpeed: CpuCurrentSpeed!
  cpuTemperature: CpuTemperature!
  memory: Memory!
  memoryLayout: [MemorySlot!]!
  diskLayout: [DiskSlot!]!
  battery: Battery!
  graphics: Graphics!
  osInfo: OsInfo!
  osVersions: OsVersions!
}

type Time {
  current: Float!
  uptime: Float!
  timezone: String!
  timezoneName: String
}

type System {
  manufacturer: String!
  model: String!
  version: String!
  serial: String
  uuid: String
  sku: String
}

type Bios {
  vendor: String
  version: String
  releaseDate: String
  revision: String
}

type Baseboard {
  manufacturer: String!
  model: String!
  version: String!
  serial: String
  assetTag: String
}

type Cpu {
  manufacturer: String!
  brand: String!
  speed: String
  speedmin: String
  speedmax: String
  cores: String!
  vendor: String!
  family: String!
  model: String
  stepping: String
  revision: String
  voltage: String
  cache: CpuCache
}

type CpuCache {
  l1d: Int!
  l1i: Int!
  l2: Int!
  l3: Int!
}

type CpuCurrentSpeed {
  avg: Float!
  min: Float
  max: Float
  cores: [Float!]!
}

type CpuTemperature {
  main: Float!
  cores: [Float!]!
  max: Float
}

type Memory {
  total: Float!
  free: Float!
  used: Float!
  active: Float!
  buffcache: Float
  available: Float!
  swaptotal: Float!
  swapused: Float!
  swapfree: Float!
}

type MemorySlot {
  size: Float!
  bank: String
  type: String!
  clockSpeed: Int!
  formFactor: String
  manufacturer: String!
  partNum: String!
  serialNum: String!
  voltageConfigured: Int
  voltageMin: Int
  voltageMax: Int
}

enum DiskType {
  HD
  SSD
}

type DiskSlot {
  type: DiskType
  name: String
  vendor: String
  firmwareRevision: String
  serialNum: String
  size: Float
  smartStatus: String
}

type Battery {
  hasbattery: Boolean!
  cyclecount: Int
  ischarging: Boolean!
  maxcapacity: Int
  currentcapacity: Int
  percent: Int!
  timeremaining: Int
  acconnected: Boolean!
  type: String
  model: String
  manufacturer: String
  serial: String
}

type GraphicController {
  model: String!
  vendor: String!
  bus: String
  vram: Int
  vramDynamic: Boolean
}

type GraphicDisplay {
  model: String!
  main: Boolean!
  builtin: Boolean!
  connection: String
  resolutionx: Int!
  resolutiony: Int!
  pixeldepth: Int
  sizex: Int
  sizey: Int
}

type Graphics {
  controllers: [GraphicController!]!
  displays: [GraphicDisplay!]!
}

type OsInfo {
  platform: String!
  distro: String!
  release: String!
  codename: String
  kernel: String
  arch: String!
  hostname: String!
  logofile: String!
  serial: String
  build: String
}

type OsVersions {
  kernel: String
  openssl: String
  systemOpenssl: String
  systemOpensslLib: String
  node: String
  v8: String
  npm: String
  yarn: String
  git: String
  mysql: String
  redis: String
  mongodb: String
  nginx: String
  php: String
  docker: String
  postfix: String
  postgresql: String
}
